{"ast":null,"code":"import BookService from '@/services/BookService';\nexport default {\n  name: 'BookList',\n  data() {\n    return {\n      books: [],\n      headers: [{\n        text: 'Titdddddddddddddddddddddddddddddddddddle',\n        value: 'title'\n      }, {\n        text: 'Author',\n        value: 'author'\n      }, {\n        text: 'Genre',\n        value: 'genre'\n      }, {\n        text: 'ISBN',\n        value: 'isbn'\n      }\n      // { text: 'Actions', value: 'actions', sortable: false },\n      ]\n    };\n  },\n  created() {\n    this.fetchBooks();\n  },\n  methods: {\n    fetchBooks() {\n      BookService.getAllBooks().then(response => {\n        this.books = response.data;\n      }).catch(error => {\n        console.error('There was an error fetching the books:', error);\n      });\n    },\n    addBook() {\n      // Navigate to the AddBook component or open a dialog for adding a new book\n    },\n    editBook() {\n      // Navigate to the EditBook component or open a dialog for editing the book\n    },\n    deleteBook(bookId) {\n      // Show a confirmation dialog before deleting the book\n      if (confirm('Are you sure you want to delete this book?')) {\n        BookService.deleteBook(bookId).then(() => {\n          this.fetchBooks(); // Refresh the list after deletion\n        }).catch(error => {\n          console.error('There was an error deleting the book:', error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["BookService","name","data","books","headers","text","value","created","fetchBooks","methods","getAllBooks","then","response","catch","error","console","addBook","editBook","deleteBook","bookId","confirm"],"sources":["/home/disco/book_store/frontend/src/components/BookList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-card>\n          <v-card-title class=\"headline\">Book List</v-card-title>\n          <v-card-text>\n            <v-data-table\n              :headers=\"headers\"\n              :items=\"books\"\n              item-key=\"id\"\n              class=\"elevation-1\"\n            >\n              <template v-slot:[`item.actions`]=\"{ item }\">\n                <v-icon small class=\"mr-2\" @click=\"editBook(item)\">\n                  mdi-pencil\n                </v-icon>\n                <v-icon small @click=\"deleteBook(item._id)\">\n                  mdi-delete\n                </v-icon>\n              </template>\n            </v-data-table>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" @click=\"addBook\">Add New Book</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport BookService from '@/services/BookService';\n\nexport default {\n  name: 'BookList',\n  data() {\n    return {\n      books: [],\n      headers: [\n        { text: 'Titdddddddddddddddddddddddddddddddddddle', value: 'title' },\n        { text: 'Author', value: 'author' },\n        { text: 'Genre', value: 'genre' },\n        { text: 'ISBN', value: 'isbn' },\n        // { text: 'Actions', value: 'actions', sortable: false },\n      ],\n    };\n  },\n  created() {\n    this.fetchBooks();\n  },\n  methods: {\n    fetchBooks() {\n      BookService.getAllBooks()\n        .then(response => {\n          this.books = response.data;\n        })\n        .catch(error => {\n          console.error('There was an error fetching the books:', error);\n        });\n    },\n    addBook() {\n      // Navigate to the AddBook component or open a dialog for adding a new book\n    },\n    editBook() {\n      // Navigate to the EditBook component or open a dialog for editing the book\n    },\n    deleteBook(bookId) {\n      // Show a confirmation dialog before deleting the book\n      if (confirm('Are you sure you want to delete this book?')) {\n        BookService.deleteBook(bookId)\n          .then(() => {\n            this.fetchBooks(); // Refresh the list after deletion\n          })\n          .catch(error => {\n            console.error('There was an error deleting the book:', error);\n          });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":"AAiCA,OAAOA,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CACP;QAAEC,IAAI,EAAE,0CAA0C;QAAEC,KAAK,EAAE;MAAQ,CAAC,EACpE;QAAED,IAAI,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EACnC;QAAED,IAAI,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAC,EACjC;QAAED,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO;MAC9B;MAAA;IAEJ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACPD,UAAUA,CAAA,EAAG;MACXR,WAAW,CAACU,WAAW,CAAC,EACrBC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACT,KAAI,GAAIS,QAAQ,CAACV,IAAI;MAC5B,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE,CAAC,CAAC;IACN,CAAC;IACDE,OAAOA,CAAA,EAAG;MACR;IAAA,CACD;IACDC,QAAQA,CAAA,EAAG;MACT;IAAA,CACD;IACDC,UAAUA,CAACC,MAAM,EAAE;MACjB;MACA,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzDpB,WAAW,CAACkB,UAAU,CAACC,MAAM,EAC1BR,IAAI,CAAC,MAAM;UACV,IAAI,CAACH,UAAU,CAAC,CAAC,EAAE;QACrB,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;UACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC/D,CAAC,CAAC;MACN;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}