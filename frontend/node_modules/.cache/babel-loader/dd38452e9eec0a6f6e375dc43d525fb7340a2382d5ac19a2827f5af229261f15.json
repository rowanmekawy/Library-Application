{"ast":null,"code":"import BookService from '@/services/BookService';\nexport default {\n  name: 'BookList',\n  data() {\n    return {\n      books: [],\n      headers: [{\n        title: 'title',\n        value: 'title'\n      }, {\n        title: 'Author',\n        value: 'author'\n      }, {\n        title: 'Genre',\n        value: 'genre'\n      }, {\n        title: 'ISBN',\n        value: 'isbn'\n      }, {\n        title: 'Actions',\n        value: 'actions',\n        sortable: false\n      }],\n      createDialog: false,\n      editDialog: false,\n      newBook: {\n        title: '',\n        author: '',\n        genre: '',\n        isbn: ''\n      },\n      editedBook: {\n        title: '',\n        author: '',\n        genre: '',\n        isbn: ''\n      }\n    };\n  },\n  created() {\n    this.fetchBooks();\n  },\n  methods: {\n    fetchBooks() {\n      BookService.getAllBooks().then(response => {\n        this.books = response.data;\n      }).catch(error => {\n        console.error('There was an error fetching the books:', error);\n      });\n    },\n    addNewBook() {\n      BookService.createBook(this.newBook).then(() => {\n        this.fetchBooks();\n        this.createDialog = false;\n        this.newBook = {\n          title: '',\n          author: '',\n          genre: '',\n          isbn: ''\n        };\n      }).catch(error => {\n        console.error('There was an error adding the book:', error);\n      });\n    },\n    openEditDialog(book) {\n      this.editedBook = {\n        ...book\n      };\n      this.editDialog = true;\n    },\n    updateBook() {\n      const updatedBook = {\n        title: this.editedBook.title,\n        author: this.editedBook.author,\n        genre: this.editedBook.genre,\n        isbn: this.editedBook.isbn\n      };\n      BookService.updateBook(this.editedBook._id, updatedBook).then(() => {\n        this.fetchBooks();\n        this.editDialog = false;\n        this.editedBook = {\n          title: '',\n          author: '',\n          genre: '',\n          isbn: ''\n        };\n      }).catch(error => {\n        console.error('There was an error updating the book:', error);\n      });\n    },\n    deleteBook(bookId) {\n      if (confirm('Are you sure you want to delete this book?')) {\n        BookService.deleteBook(bookId).then(() => {\n          this.fetchBooks();\n        }).catch(error => {\n          console.error('There was an error deleting the book:', error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["BookService","name","data","books","headers","title","value","sortable","createDialog","editDialog","newBook","author","genre","isbn","editedBook","created","fetchBooks","methods","getAllBooks","then","response","catch","error","console","addNewBook","createBook","openEditDialog","book","updateBook","updatedBook","_id","deleteBook","bookId","confirm"],"sources":["/home/disco/book_store/frontend/src/components/BookList.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-card flat>\n          <v-card-title>\n            <v-row no-gutters align=\"center\" justify=\"space-between\">\n              <span class=\"headline\">Books</span>\n              <v-text-field\n                solo\n                flat\n                hide-details\n                label=\"Search\"\n                prepend-inner-icon=\"mdi-magnify\"\n              ></v-text-field>\n              <v-btn color=\"success\" dark>Add New Book</v-btn>\n            </v-row>\n          </v-card-title>\n          <v-tabs fixed-tabs>\n            <v-tab>All Books</v-tab>\n            <v-tab>Most Popular</v-tab>\n          </v-tabs>\n          <v-card-text>\n            <v-data-table\n              :headers=\"headers\"\n              :items=\"books\"\n              item-key=\"id\"\n              class=\"elevation-0\"\n            >\n              <template v-slot:[`item.actions`]=\"{ item }\">\n                <v-icon small class=\"mr-2\" @click=\"openEditDialog(item)\">\n                  mdi-pencil\n                </v-icon>\n                <v-icon small @click=\"deleteBook(item.id)\">\n                  mdi-delete\n                </v-icon>\n              </template>\n            </v-data-table>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n    <!-- Dialogs can remain the same -->\n  </v-container>\n</template>\n\n\n<style scoped>\n.headline {\n  font-size: 24px;\n  font-weight: bold;\n}\n\n.v-card-title {\n  padding-bottom: 0;\n}\n\n.v-btn {\n  margin-left: 12px;\n}\n\n.v-tabs {\n  border: none;\n}\n\n.v-tab {\n  text-transform: none;\n  font-weight: normal;\n}\n\n.v-icon {\n  cursor: pointer;\n}\n\n/* You may need to adjust the colors and other styles based on your theme */\n</style>\n\n\n<script>\nimport BookService from '@/services/BookService';\n\nexport default {\n  name: 'BookList',\n  data() {\n    return {\n      books: [],\n      headers: [\n        { title: 'title', value: 'title' },\n        { title: 'Author', value: 'author' },\n        { title: 'Genre', value: 'genre' },\n        { title: 'ISBN', value: 'isbn' },\n        { title: 'Actions', value: 'actions', sortable: false },\n      ],\n      createDialog: false,\n      editDialog: false,\n      newBook: {\n        title: '',\n        author: '',\n        genre: '',\n        isbn: '',\n      },\n      editedBook: {\n        title: '',\n        author: '',\n        genre: '',\n        isbn: '',\n      },\n    };\n  },\n  created() {\n    this.fetchBooks();\n  },\n  methods: {\n    fetchBooks() {\n      BookService.getAllBooks()\n        .then(response => {\n          this.books = response.data;\n        })\n        .catch(error => {\n          console.error('There was an error fetching the books:', error);\n        });\n    },\n    addNewBook() {\n      BookService.createBook(this.newBook)\n        .then(() => {\n          this.fetchBooks();\n          this.createDialog = false;\n          this.newBook = { title: '', author: '', genre: '', isbn: '' };\n        })\n        .catch(error => {\n          console.error('There was an error adding the book:', error);\n        });\n    },\n    openEditDialog(book) {\n      this.editedBook = { ...book };\n      this.editDialog = true;\n    },\n    updateBook() {\n      const updatedBook = {\n        title: this.editedBook.title,\n        author: this.editedBook.author,\n        genre: this.editedBook.genre,\n        isbn: this.editedBook.isbn\n      };\n      BookService.updateBook(this.editedBook._id, updatedBook)\n        .then(() => {\n          this.fetchBooks();\n          this.editDialog = false;\n          this.editedBook = { title: '', author: '', genre: '', isbn: '' };\n        })\n        .catch(error => {\n          console.error('There was an error updating the book:', error);\n        });\n    },\n    deleteBook(bookId) {\n      if (confirm('Are you sure you want to delete this book?')) {\n        BookService.deleteBook(bookId)\n          .then(() => {\n            this.fetchBooks();\n          })\n          .catch(error => {\n            console.error('There was an error deleting the book:', error);\n          });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":"AA+EA,OAAOA,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAC,EAClC;QAAED,KAAK,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EACpC;QAAED,KAAK,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAC,EAClC;QAAED,KAAK,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAC,EAChC;QAAED,KAAK,EAAE,SAAS;QAAEC,KAAK,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAM,CAAC,CACxD;MACDC,YAAY,EAAE,KAAK;MACnBC,UAAU,EAAE,KAAK;MACjBC,OAAO,EAAE;QACPL,KAAK,EAAE,EAAE;QACTM,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACR,CAAC;MACDC,UAAU,EAAE;QACVT,KAAK,EAAE,EAAE;QACTM,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACR;IACF,CAAC;EACH,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACPD,UAAUA,CAAA,EAAG;MACXhB,WAAW,CAACkB,WAAW,CAAC,EACrBC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACjB,KAAI,GAAIiB,QAAQ,CAAClB,IAAI;MAC5B,CAAC,EACAmB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE,CAAC,CAAC;IACN,CAAC;IACDE,UAAUA,CAAA,EAAG;MACXxB,WAAW,CAACyB,UAAU,CAAC,IAAI,CAACf,OAAO,EAChCS,IAAI,CAAC,MAAM;QACV,IAAI,CAACH,UAAU,CAAC,CAAC;QACjB,IAAI,CAACR,YAAW,GAAI,KAAK;QACzB,IAAI,CAACE,OAAM,GAAI;UAAEL,KAAK,EAAE,EAAE;UAAEM,MAAM,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAC;MAC/D,CAAC,EACAQ,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D,CAAC,CAAC;IACN,CAAC;IACDI,cAAcA,CAACC,IAAI,EAAE;MACnB,IAAI,CAACb,UAAS,GAAI;QAAE,GAAGa;MAAK,CAAC;MAC7B,IAAI,CAAClB,UAAS,GAAI,IAAI;IACxB,CAAC;IACDmB,UAAUA,CAAA,EAAG;MACX,MAAMC,WAAU,GAAI;QAClBxB,KAAK,EAAE,IAAI,CAACS,UAAU,CAACT,KAAK;QAC5BM,MAAM,EAAE,IAAI,CAACG,UAAU,CAACH,MAAM;QAC9BC,KAAK,EAAE,IAAI,CAACE,UAAU,CAACF,KAAK;QAC5BC,IAAI,EAAE,IAAI,CAACC,UAAU,CAACD;MACxB,CAAC;MACDb,WAAW,CAAC4B,UAAU,CAAC,IAAI,CAACd,UAAU,CAACgB,GAAG,EAAED,WAAW,EACpDV,IAAI,CAAC,MAAM;QACV,IAAI,CAACH,UAAU,CAAC,CAAC;QACjB,IAAI,CAACP,UAAS,GAAI,KAAK;QACvB,IAAI,CAACK,UAAS,GAAI;UAAET,KAAK,EAAE,EAAE;UAAEM,MAAM,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAC;MAClE,CAAC,EACAQ,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D,CAAC,CAAC;IACN,CAAC;IACDS,UAAUA,CAACC,MAAM,EAAE;MACjB,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzDjC,WAAW,CAAC+B,UAAU,CAACC,MAAM,EAC1Bb,IAAI,CAAC,MAAM;UACV,IAAI,CAACH,UAAU,CAAC,CAAC;QACnB,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;UACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC/D,CAAC,CAAC;MACN;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}