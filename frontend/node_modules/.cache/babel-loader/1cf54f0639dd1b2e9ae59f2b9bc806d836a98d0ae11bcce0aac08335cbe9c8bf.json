{"ast":null,"code":"import BookService from '@/services/BookService';\nexport default {\n  name: 'BookList',\n  data() {\n    return {\n      books: [],\n      headers: [{\n        text: 'Title',\n        value: 'title'\n      }, {\n        text: 'Author',\n        value: 'author'\n      }, {\n        text: 'Genre',\n        value: 'genre'\n      }, {\n        text: 'ISBN',\n        value: 'isbn'\n      }, {\n        text: 'Actions',\n        value: 'actions',\n        sortable: false\n      }],\n      addDialog: false,\n      editDialog: false,\n      newBook: {\n        title: '',\n        author: '',\n        genre: '',\n        isbn: ''\n      },\n      editedBook: {\n        _id: '',\n        title: '',\n        author: '',\n        genre: '',\n        isbn: ''\n      }\n    };\n  },\n  created() {\n    this.fetchBooks();\n  },\n  methods: {\n    fetchBooks() {\n      BookService.getAllBooks().then(response => {\n        this.books = response.data;\n      }).catch(error => {\n        console.error('There was an error fetching the books:', error);\n      });\n    },\n    addNewBook() {\n      BookService.addBook(this.newBook).then(() => {\n        this.fetchBooks();\n        this.addDialog = false;\n        this.newBook = {\n          title: '',\n          author: '',\n          genre: '',\n          isbn: ''\n        };\n      }).catch(error => {\n        console.error('There was an error adding the book:', error);\n      });\n    },\n    editBook(book) {\n      this.editedBook = {\n        ...book\n      };\n      this.editDialog = true;\n    },\n    saveEditedBook() {\n      BookService.updateBook(this.editedBook._id, this.editedBook).then(() => {\n        this.fetchBooks();\n        this.editDialog = false;\n        this.editedBook = {\n          _id: '',\n          title: '',\n          author: '',\n          genre: '',\n          isbn: ''\n        };\n      }).catch(error => {\n        console.error('There was an error updating the book:', error);\n      });\n    },\n    deleteBook(bookId) {\n      // Show a confirmation dialog before deleting the book\n      if (confirm('Are you sure you want to delete this book?')) {\n        BookService.deleteBook(bookId).then(() => {\n          this.fetchBooks(); // Refresh the list after deletion\n        }).catch(error => {\n          console.error('There was an error deleting the book:', error);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["BookService","name","data","books","headers","text","value","sortable","addDialog","editDialog","newBook","title","author","genre","isbn","editedBook","_id","created","fetchBooks","methods","getAllBooks","then","response","catch","error","console","addNewBook","addBook","editBook","book","saveEditedBook","updateBook","deleteBook","bookId","confirm"],"sources":["/home/disco/book_store/frontend/src/components/BookList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <!-- Table -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-data-table\n          :headers=\"headers\"\n          :items=\"books\"\n          class=\"elevation-1\"\n        >\n          <!-- Actions Column -->\n          <template v-slot:[`item.actions`]=\"{ item }\">\n            <v-icon small class=\"mr-2\" @click=\"editBook(item)\">\n              mdi-pencil\n            </v-icon>\n            <v-icon small @click=\"deleteBook(item._id)\">\n              mdi-delete\n            </v-icon>\n          </template>\n          <template v-for=\"header in headers\" v-slot:[`item.${header.value}`]=\"{ item }\" :key=\"item._id\">\n            <span v-if=\"header.value !== 'actions'\">{{ item[header.value] }}</span>\n          </template>\n\n          <!-- Display Data -->\n          <template v-for=\"header in headers\" v-slot:[`item.${header.value}`]=\"{ item }\">\n            <span v-if=\"header.value !== 'actions'\">{{ item[header.value] }}</span>\n          </template>\n        </v-data-table>\n      </v-col>\n    </v-row>\n\n    <!-- Add Book Dialog -->\n    <v-dialog v-model=\"addDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title>Add New Book</v-card-title>\n        <v-card-text>\n          <!-- Add book form -->\n          <v-form @submit.prevent=\"addNewBook\">\n            <!-- Book fields -->\n            <v-text-field v-model=\"newBook.title\" label=\"Title\"></v-text-field>\n            <v-text-field v-model=\"newBook.author\" label=\"Author\"></v-text-field>\n            <v-text-field v-model=\"newBook.genre\" label=\"Genre\"></v-text-field>\n            <v-text-field v-model=\"newBook.isbn\" label=\"ISBN\"></v-text-field>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn color=\"blue darken-1\" text @click=\"addDialog = false\">Cancel</v-btn>\n          <v-btn color=\"blue darken-1\" text @click=\"addNewBook\">Save</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- Edit Book Dialog -->\n    <v-dialog v-model=\"editDialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title>Edit Book</v-card-title>\n        <v-card-text>\n          <!-- Edit book form -->\n          <v-form @submit.prevent=\"saveEditedBook\">\n            <!-- Book fields -->\n            <v-text-field v-model=\"editedBook.title\" label=\"Title\"></v-text-field>\n            <v-text-field v-model=\"editedBook.author\" label=\"Author\"></v-text-field>\n            <v-text-field v-model=\"editedBook.genre\" label=\"Genre\"></v-text-field>\n            <v-text-field v-model=\"editedBook.isbn\" label=\"ISBN\"></v-text-field>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-btn color=\"blue darken-1\" text @click=\"editDialog = false\">Cancel</v-btn>\n          <v-btn color=\"blue darken-1\" text @click=\"saveEditedBook\">Save</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- Add Book Button -->\n    <v-row>\n      <v-col cols=\"12\">\n        <v-btn color=\"primary\" @click=\"addDialog = true\">Add New Book</v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport BookService from '@/services/BookService';\n\nexport default {\n  name: 'BookList',\n  data() {\n    return {\n      books: [],\n      headers: [\n        { text: 'Title', value: 'title' },\n        { text: 'Author', value: 'author' },\n        { text: 'Genre', value: 'genre' },\n        { text: 'ISBN', value: 'isbn' },\n        { text: 'Actions', value: 'actions', sortable: false },\n      ],\n      addDialog: false,\n      editDialog: false,\n      newBook: {\n        title: '',\n        author: '',\n        genre: '',\n        isbn: '',\n      },\n      editedBook: {\n        _id: '',\n        title: '',\n        author: '',\n        genre: '',\n        isbn: '',\n      },\n    };\n  },\n  created() {\n    this.fetchBooks();\n  },\n  methods: {\n    fetchBooks() {\n      BookService.getAllBooks()\n        .then(response => {\n          this.books = response.data;\n        })\n        .catch(error => {\n          console.error('There was an error fetching the books:', error);\n        });\n    },\n    addNewBook() {\n      BookService.addBook(this.newBook)\n        .then(() => {\n          this.fetchBooks();\n          this.addDialog = false;\n          this.newBook = { title: '', author: '', genre: '', isbn: '' };\n        })\n        .catch(error => {\n          console.error('There was an error adding the book:', error);\n        });\n    },\n    editBook(book) {\n      this.editedBook = { ...book };\n      this.editDialog = true;\n    },\n    saveEditedBook() {\n      BookService.updateBook(this.editedBook._id, this.editedBook)\n        .then(() => {\n          this.fetchBooks();\n          this.editDialog = false;\n          this.editedBook = { _id: '', title: '', author: '', genre: '', isbn: '' };\n        })\n        .catch(error => {\n          console.error('There was an error updating the book:', error);\n        });\n    },\n    deleteBook(bookId) {\n      // Show a confirmation dialog before deleting the book\n      if (confirm('Are you sure you want to delete this book?')) {\n        BookService.deleteBook(bookId)\n          .then(() => {\n            this.fetchBooks(); // Refresh the list after deletion\n          })\n          .catch(error => {\n            console.error('There was an error deleting the book:', error);\n          });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}